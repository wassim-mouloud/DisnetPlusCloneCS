{"ast":null,"code":"var _jsxFileName = \"/Users/wassimmouloud/coding_projects/DIsneyPlusCS/client/src/components/SearchCard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { movie_genres, tv_genres } from \"../utils/genres\";\nimport httpClient from \"../httpClient\";\nimport useAuth from \"../hooks/useAuth\";\nimport { toast } from \"sonner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchCard({\n  movie,\n  index,\n  hovered,\n  setHovered,\n  hoveredMovieId,\n  setHoveredMovieId,\n  handleMouseEnter,\n  handleMouseLeave\n}) {\n  _s();\n  const [isInWatchlist, setIsInWatchlist] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {\n    user,\n    isLoading\n  } = useAuth();\n  const [trailerUrl, setTrailerUrl] = useState(null);\n  useEffect(() => {\n    const fetchTrailer = async () => {\n      const type = \"release_date\" in movie ? \"movie\" : \"tv\";\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3/${type}/${movie.MovieId}/videos?language=en-US`, {\n          method: \"GET\",\n          headers: {\n            accept: \"application/json\",\n            Authorization: \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NWIyOTk3YzgzMDBjZTlhN2Q0NzJjYjBhMzljZjI4ZiIsInN1YiI6IjYzNWFiODU0MmQ4ZWYzMDA4MTM5YmQ4ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9uqLs8oCBNUguiDI0vyPoXyrmksjpVbHnZKtHnJObG0\"\n          }\n        });\n        const data = await response.json();\n        const trailer = data.results.find(v => v.site === \"YouTube\" && v.type === \"Trailer\" && (v.official || true));\n        if (trailer) {\n          setTrailerUrl(`https://www.youtube.com/watch?v=${trailer.key}`);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch trailer:\", error);\n      }\n    };\n    fetchTrailer();\n  }, [movie]);\n  useEffect(() => {\n    const fetchWatchlist = async () => {\n      try {\n        setLoading(true);\n        const [moviesResponse, seriesResponse] = await Promise.all([httpClient.get(\"/api/watchlist/movies\"), httpClient.get(\"/api/watchlist/series\")]);\n        if (moviesResponse.status === 200 && seriesResponse.status === 200) {\n          const moviesWatchlist = moviesResponse.data;\n          const seriesWatchlist = seriesResponse.data;\n          const isMovieInMoviesWatchlist = moviesWatchlist.some(watchlistMovie => watchlistMovie.movieId === movie.id);\n          const isMovieInSeriesWatchlist = seriesWatchlist.some(watchlistSeries => watchlistSeries.SeriesId === movie.id);\n          setIsInWatchlist(isMovieInMoviesWatchlist || isMovieInSeriesWatchlist);\n        } else {\n          alert(\"Failed to fetch watchlist\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching watchlists\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWatchlist();\n  }, [movie]);\n  const handleAddMovieToWatchlist = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (isLoading) {\n      alert(\"Checking user status…\");\n      return;\n    }\n    if (!user) {\n      alert(\"Please log in to add movies to your watchlist.\");\n      return;\n    }\n    try {\n      const response = await httpClient.post(\"/api/watchlist/movies/add\", {\n        userID: user.id,\n        movieId: movie.id,\n        originalTitle: movie.original_title,\n        overview: movie.overview,\n        posterPath: movie.poster_path,\n        backdropPath: movie.backdrop_path,\n        originalLanguage: movie.original_language,\n        releaseDate: movie.release_date,\n        voteAverage: movie.vote_average,\n        voteCount: movie.vote_count,\n        popularity: movie.popularity,\n        genreIds: movie.genre_ids\n      }, {\n        withCredentials: true\n      });\n      if (response.status === 201) {\n        setIsInWatchlist(true);\n        toast.success(`${movie.original_title} added to watchlist`);\n      } else {\n        var _response$data;\n        alert(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.error) || \"Failed to add movie\");\n      }\n    } catch (err) {\n      var _err$response, _err$response2;\n      console.error(\"Error adding movie:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err);\n      alert(JSON.stringify(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || \"Failed to add movie\"));\n    }\n  };\n  const handleAddSeriesToWatchlist = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (isLoading) {\n      alert(\"Checking user status…\");\n      return;\n    }\n    if (!user) {\n      alert(\"Please log in to add series to your watchlist.\");\n      return;\n    }\n    try {\n      const response = await httpClient.post(\"/api/watchlist/series/add\", {\n        userID: user.id,\n        seriesId: movie.id,\n        name: movie.name,\n        overview: movie.overview,\n        posterPath: movie.poster_path,\n        backdropPath: movie.backdrop_path,\n        originalLanguage: movie.original_language,\n        firstAirDate: movie.first_air_date,\n        voteAverage: movie.vote_average,\n        voteCount: movie.vote_count,\n        popularity: movie.popularity,\n        genreIds: movie.genre_ids\n      }, {\n        withCredentials: true\n      });\n      if (response.status === 201) {\n        setIsInWatchlist(true);\n        toast.success(`${movie.name} added to watchlist`);\n      } else {\n        var _response$data2;\n        alert(((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.error) || \"Failed to add series\");\n      }\n    } catch (err) {\n      var _err$response3, _err$response4;\n      console.error(\"Error adding series:\", ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err);\n      alert(JSON.stringify(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data) || \"Failed to add series\"));\n    }\n  };\n  const handleRemoveMovieFromWatchlist = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const response = await httpClient.post(\"/api/watchlist/movies/remove\", movie.id, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.status === 200) {\n      setIsInWatchlist(false);\n      toast.success(`${movie.original_title} removed from watchlist`);\n    } else {\n      alert(response.data.error || \"Failed to remove movie\");\n    }\n  };\n  const handleRemoveSeriesFromWatchlist = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const response = await httpClient.post(\"/api/watchlist/series/remove\", movie.id, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.status === 200) {\n      setIsInWatchlist(false);\n      toast.success(`${movie.name} removed from watchlist`);\n    } else {\n      alert(response.data.error || \"Failed to remove series\");\n    }\n  };\n  const toggleWatchlist = e => {\n    if (isInWatchlist) {\n      \"release_date\" in movie ? handleRemoveMovieFromWatchlist(e) : handleRemoveSeriesFromWatchlist(e);\n    } else {\n      \"release_date\" in movie ? handleAddMovieToWatchlist(e) : handleAddSeriesToWatchlist(e);\n    }\n  };\n  const watchlistLabel = isInWatchlist ? \"-\" : \"+\";\n  useEffect(() => {\n    console.log(\"Movie:\", movie);\n  });\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `${\"release_date\" in movie ? `/MovieDetail/${movie.id}` : `/SeriesDetail/${movie.id}`}`,\n    layout: true,\n    className: `group relative fade h-[220px] md:h-[220px] lg:h-[245px]  rounded-[7px] bg-[#16181f] cursor-pointer transition-transform duration-500 ${hovered && movie.id === hoveredMovieId ? \"lg:hover:scale-x-[1.7] lg:hover:scale-y-[1.4] lg:hover:z-[99]\" : \"\"} ${index % 6 == 0 ? \"lg:origin-left\" : \"\"} ${index % 6 === 5 && index !== 0 ? \"lg:origin-right\" : \"\"} `,\n    onMouseEnter: () => handleMouseEnter(movie.id),\n    onMouseLeave: handleMouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      loading: \"lazy\",\n      src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n      alt: \"\",\n      className: `skeleton rounded-[5px] h-full w-full ${hovered && movie.id === hoveredMovieId ? \"lg:hidden\" : \"\"}    `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      loading: \"lazy\",\n      src: `https://image.tmdb.org/t/p/w780${movie.backdrop_path}`,\n      alt: \"\",\n      className: `skeleton w-full object-cover rounded-[5px] h-[40%] absolute top-0 opacity-0 ${hovered && movie.id === hoveredMovieId ? \"lg:group-hover:opacity-100   lg:flex \" : \"\"} `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `lg:mt-[50%] flex-col items-start justify-between h-[calc(60%-16px)] hidden w-full py-2 px-2 mt-1 ${hovered && movie.id === hoveredMovieId ? \"lg:group-hover:flex\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 w-[95%]\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.preventDefault();\n            e.stopPropagation();\n            window.open(trailerUrl || `https://www.youtube.com/results?search_query=${encodeURIComponent(movie.original_title || movie.Name)} trailer`, \"_blank\");\n          },\n          className: \"text-[8px] h-[30px] w-[135px] flex justify-center items-center gap-1 bg-[#d9d9da] rounded-[5px] lg:hover:scale-105 transition-all\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            loading: \"lazy\",\n            src: \"/images/dark-blue-play.png\",\n            alt: \"\",\n            className: \"w-2 h-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium text-[#16181f]\",\n            children: \"Watch Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => toggleWatchlist(e),\n          className: \"text-[8px] h-[30px] w-[30px] flex justify-center items-center bg-[rgba(40,42,49,255)] rounded-[5px] text-white lg:hover:scale-105 transition-all \",\n          children: watchlistLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-[10px] text-[#d9d9da] py-1\",\n        children: \"release_date\" in movie ? movie.original_title : movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[95%] flex flex-col gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-1  items-center text-[8px] font-medium \",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#d9d9da] text-[8px]\",\n            children: \"release_date\" in movie ? typeof movie.release_date === \"string\" ? movie.release_date.slice(0, 4) : null : typeof (movie === null || movie === void 0 ? void 0 : movie.first_air_date) === \"string\" ? movie.first_air_date.slice(0, 4) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#a2a3a5] text-[9px]\",\n            children: \"\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), movie.genre_ids.slice(0, 2).map(genre_id => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-1 text-[8px]\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-[#d9d9da]\",\n                children: \"release_date\" in movie ? movie_genres[genre_id] : tv_genres[genre_id]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-[#a2a3a5]\",\n                children: \"\\u2022\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center items-center text-[#d9d9da] gap-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              loading: \"lazy\",\n              src: \"/images/star.png\",\n              alt: \"\",\n              className: \"w-2 h-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-[8px]\",\n              children: movie.vote_average && movie.vote_average.toString().slice(0, 3)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-[#7c849b] text-[7px] flex-grow-0 flex-shrink-0 w-full\",\n          children: movie.overview.split(\" \").slice(0, 22).join(\" \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchCard, \"kPuQ4IWpZkLboBUrUrDTH5N7zUk=\", false, function () {\n  return [useAuth];\n});\n_c = SearchCard;\nexport default SearchCard;\nvar _c;\n$RefreshReg$(_c, \"SearchCard\");","map":{"version":3,"names":["useEffect","useState","Link","movie_genres","tv_genres","httpClient","useAuth","toast","jsxDEV","_jsxDEV","SearchCard","movie","index","hovered","setHovered","hoveredMovieId","setHoveredMovieId","handleMouseEnter","handleMouseLeave","_s","isInWatchlist","setIsInWatchlist","loading","setLoading","user","isLoading","trailerUrl","setTrailerUrl","fetchTrailer","type","response","fetch","MovieId","method","headers","accept","Authorization","data","json","trailer","results","find","v","site","official","key","error","console","fetchWatchlist","moviesResponse","seriesResponse","Promise","all","get","status","moviesWatchlist","seriesWatchlist","isMovieInMoviesWatchlist","some","watchlistMovie","movieId","id","isMovieInSeriesWatchlist","watchlistSeries","SeriesId","alert","handleAddMovieToWatchlist","e","preventDefault","stopPropagation","post","userID","originalTitle","original_title","overview","posterPath","poster_path","backdropPath","backdrop_path","originalLanguage","original_language","releaseDate","release_date","voteAverage","vote_average","voteCount","vote_count","popularity","genreIds","genre_ids","withCredentials","success","_response$data","err","_err$response","_err$response2","JSON","stringify","handleAddSeriesToWatchlist","seriesId","name","firstAirDate","first_air_date","_response$data2","_err$response3","_err$response4","handleRemoveMovieFromWatchlist","handleRemoveSeriesFromWatchlist","toggleWatchlist","watchlistLabel","log","to","layout","className","onMouseEnter","onMouseLeave","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","open","encodeURIComponent","Name","slice","map","genre_id","toString","split","join","_c","$RefreshReg$"],"sources":["/Users/wassimmouloud/coding_projects/DIsneyPlusCS/client/src/components/SearchCard.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { movie_genres, tv_genres } from \"../utils/genres\";\nimport httpClient from \"../httpClient\";\nimport useAuth from \"../hooks/useAuth\";\nimport { toast } from \"sonner\";\n\nfunction SearchCard({\n  movie,\n  index,\n  hovered,\n  setHovered,\n  hoveredMovieId,\n  setHoveredMovieId,\n  handleMouseEnter,\n  handleMouseLeave,\n}) {\n  const [isInWatchlist, setIsInWatchlist] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const { user, isLoading } = useAuth();\n  const [trailerUrl, setTrailerUrl] = useState(null);\n\n  useEffect(() => {\n    const fetchTrailer = async () => {\n      const type = \"release_date\" in movie ? \"movie\" : \"tv\";\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/${type}/${movie.MovieId}/videos?language=en-US`,\n          {\n            method: \"GET\",\n            headers: {\n              accept: \"application/json\",\n              Authorization:\n                \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NWIyOTk3YzgzMDBjZTlhN2Q0NzJjYjBhMzljZjI4ZiIsInN1YiI6IjYzNWFiODU0MmQ4ZWYzMDA4MTM5YmQ4ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9uqLs8oCBNUguiDI0vyPoXyrmksjpVbHnZKtHnJObG0\",\n            },\n          }\n        );\n        const data = await response.json();\n        const trailer = data.results.find(\n          (v) =>\n            v.site === \"YouTube\" && v.type === \"Trailer\" && (v.official || true)\n        );\n        if (trailer) {\n          setTrailerUrl(`https://www.youtube.com/watch?v=${trailer.key}`);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch trailer:\", error);\n      }\n    };\n\n    fetchTrailer();\n  }, [movie]);\n\n  useEffect(() => {\n    const fetchWatchlist = async () => {\n      try {\n        setLoading(true);\n\n        const [moviesResponse, seriesResponse] = await Promise.all([\n          httpClient.get(\"/api/watchlist/movies\"),\n          httpClient.get(\"/api/watchlist/series\"),\n        ]);\n\n        if (moviesResponse.status === 200 && seriesResponse.status === 200) {\n          const moviesWatchlist = moviesResponse.data;\n          const seriesWatchlist = seriesResponse.data;\n\n          const isMovieInMoviesWatchlist = moviesWatchlist.some(\n            (watchlistMovie) => watchlistMovie.movieId === movie.id\n          );\n          const isMovieInSeriesWatchlist = seriesWatchlist.some(\n            (watchlistSeries) => watchlistSeries.SeriesId === movie.id\n          );\n\n          setIsInWatchlist(\n            isMovieInMoviesWatchlist || isMovieInSeriesWatchlist\n          );\n        } else {\n          alert(\"Failed to fetch watchlist\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching watchlists\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchWatchlist();\n  }, [movie]);\n\n  const handleAddMovieToWatchlist = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (isLoading) {\n      alert(\"Checking user status…\");\n      return;\n    }\n    if (!user) {\n      alert(\"Please log in to add movies to your watchlist.\");\n      return;\n    }\n\n    try {\n      const response = await httpClient.post(\n        \"/api/watchlist/movies/add\",\n        {\n          userID: user.id,\n          movieId: movie.id,\n          originalTitle: movie.original_title,\n          overview: movie.overview,\n          posterPath: movie.poster_path,\n          backdropPath: movie.backdrop_path,\n          originalLanguage: movie.original_language,\n          releaseDate: movie.release_date,\n          voteAverage: movie.vote_average,\n          voteCount: movie.vote_count,\n          popularity: movie.popularity,\n          genreIds: movie.genre_ids,\n        },\n        { withCredentials: true }\n      );\n\n      if (response.status === 201) {\n        setIsInWatchlist(true);\n        toast.success(`${movie.original_title} added to watchlist`);\n      } else {\n        alert(response.data?.error || \"Failed to add movie\");\n      }\n    } catch (err) {\n      console.error(\"Error adding movie:\", err.response?.data || err);\n      alert(JSON.stringify(err.response?.data || \"Failed to add movie\"));\n    }\n  };\n\n  const handleAddSeriesToWatchlist = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (isLoading) {\n      alert(\"Checking user status…\");\n      return;\n    }\n    if (!user) {\n      alert(\"Please log in to add series to your watchlist.\");\n      return;\n    }\n\n    try {\n      const response = await httpClient.post(\n        \"/api/watchlist/series/add\",\n        {\n          userID: user.id,\n          seriesId: movie.id,\n          name: movie.name,\n          overview: movie.overview,\n          posterPath: movie.poster_path,\n          backdropPath: movie.backdrop_path,\n          originalLanguage: movie.original_language,\n          firstAirDate: movie.first_air_date,\n          voteAverage: movie.vote_average,\n          voteCount: movie.vote_count,\n          popularity: movie.popularity,\n          genreIds: movie.genre_ids,\n        },\n        { withCredentials: true }\n      );\n\n      if (response.status === 201) {\n        setIsInWatchlist(true);\n        toast.success(`${movie.name} added to watchlist`);\n      } else {\n        alert(response.data?.error || \"Failed to add series\");\n      }\n    } catch (err) {\n      console.error(\"Error adding series:\", err.response?.data || err);\n      alert(JSON.stringify(err.response?.data || \"Failed to add series\"));\n    }\n  };\n\n  const handleRemoveMovieFromWatchlist = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const response = await httpClient.post(\n      \"/api/watchlist/movies/remove\",\n      movie.id,\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n\n    if (response.status === 200) {\n      setIsInWatchlist(false);\n      toast.success(`${movie.original_title} removed from watchlist`);\n    } else {\n      alert(response.data.error || \"Failed to remove movie\");\n    }\n  };\n\n  const handleRemoveSeriesFromWatchlist = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const response = await httpClient.post(\n      \"/api/watchlist/series/remove\",\n      movie.id,\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n\n    if (response.status === 200) {\n      setIsInWatchlist(false);\n      toast.success(`${movie.name} removed from watchlist`);\n    } else {\n      alert(response.data.error || \"Failed to remove series\");\n    }\n  };\n\n  const toggleWatchlist = (e) => {\n    if (isInWatchlist) {\n      \"release_date\" in movie\n        ? handleRemoveMovieFromWatchlist(e)\n        : handleRemoveSeriesFromWatchlist(e);\n    } else {\n      \"release_date\" in movie\n        ? handleAddMovieToWatchlist(e)\n        : handleAddSeriesToWatchlist(e);\n    }\n  };\n\n  const watchlistLabel = isInWatchlist ? \"-\" : \"+\";\n\n  useEffect(() => {\n    console.log(\"Movie:\", movie);\n  });\n\n  return (\n    <Link\n      to={`${\n        \"release_date\" in movie\n          ? `/MovieDetail/${movie.id}`\n          : `/SeriesDetail/${movie.id}`\n      }`}\n      key={index}\n      layout\n      className={`group relative fade h-[220px] md:h-[220px] lg:h-[245px]  rounded-[7px] bg-[#16181f] cursor-pointer transition-transform duration-500 ${\n        hovered && movie.id === hoveredMovieId\n          ? \"lg:hover:scale-x-[1.7] lg:hover:scale-y-[1.4] lg:hover:z-[99]\"\n          : \"\"\n      } ${index % 6 == 0 ? \"lg:origin-left\" : \"\"} ${\n        index % 6 === 5 && index !== 0 ? \"lg:origin-right\" : \"\"\n      } `}\n      onMouseEnter={() => handleMouseEnter(movie.id)}\n      onMouseLeave={handleMouseLeave}\n    >\n      <img\n        loading=\"lazy\"\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt=\"\"\n        className={`skeleton rounded-[5px] h-full w-full ${\n          hovered && movie.id === hoveredMovieId ? \"lg:hidden\" : \"\"\n        }    `}\n      />\n      <img\n        loading=\"lazy\"\n        src={`https://image.tmdb.org/t/p/w780${movie.backdrop_path}`}\n        alt=\"\"\n        className={`skeleton w-full object-cover rounded-[5px] h-[40%] absolute top-0 opacity-0 ${\n          hovered && movie.id === hoveredMovieId\n            ? \"lg:group-hover:opacity-100   lg:flex \"\n            : \"\"\n        } `}\n      />\n      <div\n        className={`lg:mt-[50%] flex-col items-start justify-between h-[calc(60%-16px)] hidden w-full py-2 px-2 mt-1 ${\n          hovered && movie.id === hoveredMovieId ? \"lg:group-hover:flex\" : \"\"\n        }`}\n      >\n        <div className=\"flex gap-2 w-[95%]\">\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              window.open(\n                trailerUrl ||\n                  `https://www.youtube.com/results?search_query=${encodeURIComponent(\n                    movie.original_title || movie.Name\n                  )} trailer`,\n                \"_blank\"\n              );\n            }}\n            className=\"text-[8px] h-[30px] w-[135px] flex justify-center items-center gap-1 bg-[#d9d9da] rounded-[5px] lg:hover:scale-105 transition-all\"\n          >\n            <img\n              loading=\"lazy\"\n              src=\"/images/dark-blue-play.png\"\n              alt=\"\"\n              className=\"w-2 h-2\"\n            />\n            <span className=\"font-medium text-[#16181f]\">Watch Now</span>\n          </button>\n          <button\n            onClick={(e) => toggleWatchlist(e)}\n            className=\"text-[8px] h-[30px] w-[30px] flex justify-center items-center bg-[rgba(40,42,49,255)] rounded-[5px] text-white lg:hover:scale-105 transition-all \"\n          >\n            {watchlistLabel}\n          </button>\n        </div>\n        <p className=\"font-bold text-[10px] text-[#d9d9da] py-1\">\n          {\"release_date\" in movie ? movie.original_title : movie.name}\n        </p>\n        <div className=\"w-[95%] flex flex-col gap-1\">\n          <div className=\"flex gap-1  items-center text-[8px] font-medium \">\n            <span className=\"text-[#d9d9da] text-[8px]\">\n              {\"release_date\" in movie\n                ? typeof movie.release_date === \"string\"\n                  ? movie.release_date.slice(0, 4)\n                  : null\n                : typeof movie?.first_air_date === \"string\"\n                ? movie.first_air_date.slice(0, 4)\n                : null}\n            </span>\n            <span className=\"text-[#a2a3a5] text-[9px]\">•</span>\n            {movie.genre_ids.slice(0, 2).map((genre_id) => {\n              return (\n                <div className=\"flex gap-1 text-[8px]\">\n                  <span className=\"text-[#d9d9da]\">\n                    {\"release_date\" in movie\n                      ? movie_genres[genre_id]\n                      : tv_genres[genre_id]}\n                  </span>\n                  <span className=\"text-[#a2a3a5]\">•</span>\n                </div>\n              );\n            })}\n            <div className=\"flex justify-center items-center text-[#d9d9da] gap-1\">\n              <img\n                loading=\"lazy\"\n                src=\"/images/star.png\"\n                alt=\"\"\n                className=\"w-2 h-2\"\n              />\n              <span className=\"text-[8px]\">\n                {movie.vote_average &&\n                  movie.vote_average.toString().slice(0, 3)}\n              </span>\n            </div>\n          </div>\n          <p className=\"text-[#7c849b] text-[7px] flex-grow-0 flex-shrink-0 w-full\">\n            {movie.overview.split(\" \").slice(0, 22).join(\" \")}\n          </p>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default SearchCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}